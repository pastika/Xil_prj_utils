variables:
  # Cf. https://docs.gitlab.com/ee/ci/yaml/README.html#git-submodule-strategy
  GIT_SUBMODULE_STRATEGY: recursive
  # set to remedy issues from git repository caching 
  GIT_STRATEGY: clone
  # set unique directory for each git checkout https://docs.gitlab.com/ee/ci/runners/README.html#handling-concurrency
  # this setting needs debugging
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_CONCURRENT_ID/$CI_PROJECT_PATH 

.list_project:
    image: python:latest
    before_script:
        - pip install --no-cache-dir -r requirements.txt
    script:
        - ./project list

.setup_vivado_template:
    variables:
        XILVERSION: 0 # Change this to the version number
    tags:
        - docker-privileged-xl
    image:
        name: gitlab-registry.cern.ch/cce/docker_build/vivado:${XILVERSION}
    before_script:
        # without export: "RuntimeError: Click will abort further execution because Python 3 was configured to use ASCII as encoding for the environment."
        - export LC_ALL=en_US.utf-8
        - export LANG=en_US.utf-8
        # pip3 install --no-cache-dir -r requirements.txt /  PermissionError: [Errno 13] Permission denied: '/usr/local/lib/python3.6'
        - pip3 install --no-cache-dir --user -r requirements.txt
    
.build_project:
    extends: .setup_vivado_template
    variables:
        PRE_SLEEP: 0 # Change this N to sleep exactly N seconds
        MAX_PRE_SLEEP: 0 # Change to N and keep PRE_SLEEP=0 in order to sleep randomly between 0 and N seconds
        XILVERSION: "2019.2"
    script:
        -  if [[ ${MAX_PRE_SLEEP} != 0 && ${PRE_SLEEP} = 0 ]]; then PRE_SLEEP=$[ ( $RANDOM % $MAX_PRE_SLEEP ) ]; echo "Sleeping $PRE_SLEEP sec (from random max $MAX_PRE_SLEEP sec)"; sleep $PRE_SLEEP; elif [[ ! -z $PRE_SLEEP ]]; then echo "Sleeping $PRE_SLEEP s"; sleep $PRE_SLEEP; fi
        - ./project create ${JOB_NAME}
        - ./project build  ${JOB_NAME}
        - ./project xml    ${JOB_NAME}
        - ./project report ${JOB_NAME}
    artifacts:
        name: ${JOB_NAME}-${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_IID}-${CI_COMMIT_SHORT_SHA}-debug
        paths:
        - ${JOB_NAME}

.prepare_outputs:
    artifacts:
        name: ${JOB_NAME}-${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_IID}-${CI_COMMIT_SHORT_SHA}
        paths:
        - ${JOB_NAME}/${JOB_NAME}.bit
        - ${JOB_NAME}/device-tree/pl-full.dtsi
        - ${JOB_NAME}/device-tree/pl.dtbo
        - ${JOB_NAME}/uHAL_xml/*.xml
        - ${JOB_NAME}/uHAL_xml/modules/*.xml
        - ${JOB_NAME}/*_summary.txt
    # Example usage needs to set JOB_NAME, for instance with:
    # parallel:
    #     matrix:
    #         - JOB_NAME: [design]
